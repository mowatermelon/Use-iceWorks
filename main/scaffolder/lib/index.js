const e=require("fs"),r=require("path"),t=require("mkdirp"),i=require("rimraf"),a=require("debug")("create-ice-app"),n=require("./utils");require("./pageTemplates"),exports.createProject=require("./createProject"),exports.removePreviewPage=require("./removePreviewPage"),exports.createPage=require("./createPage"),exports.removePage=require("./removePage"),exports.utils=n,exports.migrateBlock=async function s({name:o,npm:c,version:p,destProjectPath:u,interpreter:l}){const P=r.join(u,"src/components"),m=r.join(P,o);if(e.existsSync(m)){const e=await n.createInterpreter("BLOCK_EXISTS_RENAME",{name:o},l);if(!0!==e)return e?s({name:e,npm:c,version:p,destProjectPath:u,interpreter:l}):void 0;i.sync(m)}const g=await n.getTarballURL(c,p),j=r.join(q,"blocks"),q=r.join(j,o),f=(await n.extractTarball(g,q)).filter(e=>/src\//.test(e));for(let i=0;i<f.length;i++){const s=r.relative(r.join(j,o,"src"),f[i]),c=r.join(u,"src/components",o),p=r.join(c,s);if(e.existsSync(c)||t.sync(c),e.existsSync(p)){if(!await n.createInterpreter("OVERRIDE_FILE",{destFilePath:p},l))return}e.writeFileSync(p,e.readFileSync(f[i]),"utf-8"),a("created destFilePath",p)}};