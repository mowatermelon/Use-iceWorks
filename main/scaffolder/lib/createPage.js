const e=require("fs"),t=require("kebab-case"),r=require("mkdirp"),a=require("path"),s=require("uppercamelcase"),n=require("util"),i=require("vm"),o=require("./utils"),c=require("./routes"),p=require("./pageTemplates"),l=require("prettier"),d=require("./interactiveFileReplacement"),u=require("./errors/DependenciesError"),m=require("../../config"),g=["*","404","502"];module.exports=async function({pageName:y,routeName:f,routeIcon:v,destDir:h,layout:N,blocks:w=[],interpreter:x,commonBlock:j=!1,preview:E=!1,builtIn:P=!1}){let k=[];if(E&&(y="IceworksPreviewPage",f="IceworksPreviewPage"),!await o.checkValidICEProject(h))return o.createInterpreter("UNSUPPORTED_DESTPATH",{destDir:h},x),[];const b=s(y||"");y=t(b||"").replace(/^-/,"");const I=a.join(h,"src/pages",b);if(P&&e.existsSync(I)&&e.readdirSync(I).length>0){if(!await o.createInterpreter("DESTDIR_EXISTS_OVERRIDE",{dir:I,destDir:h},x))return[]}const S=a.join(h,"package.json"),D=JSON.parse(e.readFileSync(S));D.dependencies=D.dependencies||{};const $={};if(Array.isArray(w))for(let e=0;e<w.length;e++){const t=w[e],{dependencies:r}=await o.getDependencies(t.npm,t.version);Object.keys(r).forEach(e=>{const t=r[e];D.dependencies.hasOwnProperty(e)||($[e]=t)})}if(Object.keys($).length>0){if(!await o.createInterpreter("ADD_DEPENDENCIES",$,x)){const e=w.map(e=>`${e.npm}@${e.version}`).join(" "),t=Object.keys($).map(e=>`${e}@${$[e]}`).join(" ");throw new u("blocks \u5b89\u88c5\u5931\u8d25",{message:`\u65e0\u6cd5\u5b89\u88c5\u4ee5\u4e0b\u533a\u5757\uff1a\n    blocks: ${e}\n    dependencies: ${t}`})}}if(Array.isArray(w))for(let e=0;e<w.length;e++){const t=w[e],r=await o.getTarballURL(t.npm,t.version),n=t.className||s(t.name);let i="src/components";t.className=n,t.relativePath=`../../components/${n}`,E?(t.relativePath=`./blocks/${n}`,i="src/pages/IceworksPreviewPage/blocks"):(j||t.common)&&(t.relativePath=`./components/${n}`,i=`src/pages/${b}/components`);const c=await o.extractBlock(a.join(h,i,t.alias||n),r,h);k=k.concat(c)}const R={layout:N,blocks:w,className:b,pageName:y},q=s(N),A=`@icedesign/${t(q).replace(/^-/,"")}`;if(!e.existsSync(a.join(h,"src/layouts",N))){const e=await o.getTarballURL(A),{dependencies:t}=await o.getDependencies(A),r={};Object.keys(t).forEach(e=>{const a=t[e];D.dependencies.hasOwnProperty(e)||(r[e]=a)}),(await o.extractBlock(a.join(h,"src/layouts",q),e,h)).forEach(e=>k.push(e))}r.sync(I);const O=p.reduce((t,r)=>{try{const s=l.format(r.compile(R),m.prettier),n=r.fileName.replace(/PAGE/g,b).replace(/\.ejs$/g,""),i=a.join(I,n);return k.push(i),e.writeFileSync(i,s,"utf-8"),1&t}catch(e){return 0&t}},1),F=a.join(h,"src/routes.jsx"),T=new d({file:F,tagPrefix:"// \x3c!-- auto generated routes start --\x3e",tagSuffix:"// \x3c!-- auto generated routes end --\x3e"}),_=c._parseRoute(T.getFileContent());c.addImports(_.program.body,[{type:"page",ref:b},{type:"layout",ref:q}]),c.addRoute(_.program.body,{path:f,childRoutes:[],component:"id "+q,indexRoute:{component:"id "+b}});const{code:G}=c._generateRoute({type:"Program",body:_.program.body});T.replace(G);let C,H="",L=!1;const U=a.join(h,"src/config/navs.json");e.existsSync(U)&&(H=U,L=!0),L||(H=a.join(h,"src/navs.js"),C=new d({file:H,tagPrefix:"// \x3c!-- auto generated navs start --\x3e",tagSuffix:"// \x3c!-- auto generated navs end --\x3e"}));const B=e.readFileSync(H);let J;if(L)try{J=JSON.parse(B)}catch(e){J={headerNavs:[],asideNavs:[]}}else{const e=C.getFileContent(),t={};i.createContext(t);try{i.runInContext(`${e}\nvar result = {autoGenHeaderNavs,autoGenAsideNavs};`,t)}catch(e){t.result={}}J={headerNavs:t.result.autoGenHeaderNavs||[],asideNavs:t.result.autoGenAsideNavs||[]}}if(!E&&!P){const e=y;let t=f.startsWith("/")?f:`/${f}`;t=t.split("/").map(e=>e&&":"===e[0]?/id/i.test(e)?"1":e.replace(/^:/,""):e).join("/");const r=J.asideNavs.some(e=>e.to===t),a=J.headerNavs.some(e=>e.to===t),s={text:e,to:t,icon:v||"nav-list"};"/"!==f&&e&&!a&&(r?J.asideNavs=J.asideNavs.map(e=>e.to===t?s:e):g.indexOf(f)>-1||J.asideNavs.push(s))}return L?e.writeFileSync(H,JSON.stringify(J,null,2)):C.replace(l.format(`const autoGenHeaderNavs = ${n.inspect(J.headerNavs,{showHidden:!1,depth:null})};\n    const autoGenAsideNavs = ${n.inspect(J.asideNavs,{showHidden:!1,depth:null})};`,m.prettier)),k.push(F),O?await o.createInterpreter("FILE_CREATED",k,x):await o.createInterpreter("RENDER_PAGE_FAIL",!0,x),k};