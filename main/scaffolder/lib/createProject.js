const e=require("fs"),t=require("path"),r=require("rimraf"),n=require("prettier"),a=require("./createPage"),i=require("./utils"),{prettier:s}=require("../../config"),o=require("./generateRouteFile"),c=require("./interactiveFileReplacement"),u=require("./errors/CreateError");module.exports=async function({destDir:l,scaffolding:p,version:f,projectName:d,interpreter:g}){if(e.existsSync(l)&&e.readdirSync(l).length>0){if(!await i.createInterpreter("DESTDIR_EXISTS_OVERRIDE",{dir:l,destDir:l},g))throw new u("\u5f53\u524d\u76ee\u5f55\u5df2\u5b58\u5728\u6587\u4ef6","\u53d6\u6d88\u521b\u5efa")}const E=await i.getTarballURL(p,f),w=await i.extractTarball(E,l),h=t.join(l,"generator.json");if(e.existsSync(h)){const r=JSON.parse(e.readFileSync(h,"utf-8")),u=JSON.parse(e.readFileSync(t.join(l,"package.json"),"utf-8"));let p;for(p=0;p<r.layouts.length;p++){const e=r.layouts[p];if(e.builtIn)continue;const n=await i.getTarballURL(e.source),{dependencies:a}=await i.getDependencies(e.source),s={};if(Object.keys(a).forEach(e=>{const t=a[e];u.dependencies.hasOwnProperty(e)||(s[e]=t)}),Object.keys(s).length>0){const e=await i.createInterpreter("ADD_DEPENDENCIES",s,g);if(Object.assign(u.dependencies,s),!e)throw new Error("\u5b89\u88c5\u4f9d\u8d56\u5931\u8d25")}(await i.extractBlock(t.join(l,"src/layouts",e.alias),n,l,["src/navs.js"])).forEach(e=>w.push(e))}for(p=0;p<r.components.length;p++){const e=r.components[p],n=await i.getTarballURL(e.source),{dependencies:a}=await i.getDependencies(e.source),s={};if(Object.keys(a).forEach(e=>{const t=a[e];u.dependencies.hasOwnProperty(e)||(s[e]=t)}),Object.keys(s).length>0){const e=await i.createInterpreter("ADD_DEPENDENCIES",s,g);if(Object.assign(u.dependencies,s),!e)throw new Error("\u5b89\u88c5\u4f9d\u8d56\u5931\u8d25")}(await i.extractBlock(t.join(l,"src/components",e.alias),n,l)).forEach(e=>w.push(e))}for(p=0;p<r.routes.length;p++){const e=r.routes[p];if(!e.builtIn){(await a({destDir:l,pageName:e.page,routeName:e.path,layout:e.layout,blocks:e.blocks||[],builtIn:!!e.builtIn,interpreter:g,ignoreFileExists:!0})).forEach(e=>{w.push(e)})}}const f=new c({file:t.join(l,"src/routes.jsx"),tagPrefix:"// \x3c!-- auto generated routes start --\x3e",tagSuffix:"// \x3c!-- auto generated routes end --\x3e"}),{imports:d,routes:E}=o(l,r.routes);f.replace(n.format(`${d}\nconst autoGeneratedRoutes = ${E};`,s))}i.createInterpreter("FILE_CREATED",w,g),r.sync(h);const y=t.join(l,"package.json"),j=require(y);j.title=d,j.version="1.0.0",e.writeFileSync(y,JSON.stringify(j,null,2)+"\n","utf-8")};