const e = require("fs"), t = require("path"), r = require("prettier"), a = require("./createPage"), n = require("./utils"), {
    prettier: s
} = require("./config"), i = require("./generateRouteFile"), o = require("./interactiveFileReplacement"), c = require("./errors/CreateError");
module.exports =
async function({
    destDir: u,
    scaffolding: l,
    version: p,
    projectName: f,
    interpreter: d
}) {
    if (e.existsSync(u) && e.readdirSync(u).length > 0) {
        if (!await n.createInterpreter("DESTDIR_EXISTS_OVERRIDE", {
            dir: u,
            destDir: u
        }, d)) throw new c("\u5f53\u524d\u76ee\u5f55\u5df2\u5b58\u5728\u6587\u4ef6", "\u53d6\u6d88\u521b\u5efa")
    }
    const g = await n.getTarballURL(l, p), E = await n.extractTarball(g, u), w = t.join(u, "generator.json");
    if (e.existsSync(w)) {
        const c = JSON.parse(e.readFileSync(w, "utf-8")), l = JSON.parse(e.readFileSync(t.join(u, "package.json"), "utf-8"));
        let p;
        for (p = 0; p < c.layouts.length; p++) {
            const e = c.layouts[p], r = await n.getTarballURL(e.source), {
                dependencies: a
            } = await n.getDependencies(e.source), s = {};
            if (Object.keys(a).forEach(e => {
                const t = a[e];
                l.dependencies.hasOwnProperty(e) || (s[e] = t)
            }), Object.keys(s).length > 0) {
                const e = await n.createInterpreter("ADD_DEPENDENCIES", s, d);
                if (Object.assign(l.dependencies, s), !e) throw new Error("\u5b89\u88c5\u4f9d\u8d56\u5931\u8d25")
            }(await n.extractBlock(t.join(u, "src/layouts", e.alias), r, u, ["src/navs.js"])).forEach(e => E.push(e))
        }
        for (p = 0; p < c.components.length; p++) {
            const e = c.components[p], r = await n.getTarballURL(e.source), {
                dependencies: a
            } = await n.getDependencies(e.source), s = {};
            if (Object.keys(a).forEach(e => {
                const t = a[e];
                l.dependencies.hasOwnProperty(e) || (s[e] = t)
            }), Object.keys(s).length > 0) {
                const e = await n.createInterpreter("ADD_DEPENDENCIES", s, d);
                if (Object.assign(l.dependencies, s), !e) throw new Error("\u5b89\u88c5\u4f9d\u8d56\u5931\u8d25")
            }(await n.extractBlock(t.join(u, "src/components", e.alias), r, u)).forEach(e => E.push(e))
        }
        for (p = 0; p < c.routes.length; p++) {
            const e = c.routes[p];
            if (!e.builtIn) {
                (await a({
                    destDir: u,
                    pageName: e.page,
                    routeName: e.path,
                    layout: e.layout,
                    blocks: e.blocks || [],
                    builtIn: !! e.builtIn,
                    interpreter: d,
                    ignoreFileExists: !0
                })).forEach(e => {
                    E.push(e)
                })
            }
        }
        const f = new o({
            file: t.join(u, "src/routes.jsx"),
            tagPrefix: "// \x3c!-- auto generated routes start --\x3e",
            tagSuffix: "// \x3c!-- auto generated routes end --\x3e"
        }), {
            imports: g,
            routes: h
        } = i(u, c.routes);
        f.replace(r.format(`$ {
            g
        }\nconst autoGeneratedRoutes = $ {
            h
        };`, s))
    }
    n.createInterpreter("FILE_CREATED", E, d);
    const h = t.join(u, "package.json"), y = require(h);
    y.title = f, e.writeFileSync(h, JSON.stringify(y, null, 2) + "\n", "utf-8")
};