const{exec:e}=require("child_process"),s=require("fs"),r=require("path"),t=require("path-exists"),{getEnv:n}=require("../env"),i=require("../logger"),c=require("./sessions/Session");class p extends Error{constructor(e,s){super(e),this.metadata=s}}const o={exec(s,r={},t){e(s,Object.assign(r,{env:n()}),t)},run(e,s){"string"==typeof e&&(e=e.split(" "));const r=s.cwd;return i.debug("npm",e.join(" "),r),e.push("--scripts-prepend-node-path=auto"),new Promise((s,t)=>{new c({cwd:r,shell:"npm",shellArgs:e}).on("exit",r=>{0===r?s(r):t(new p("runcmd",{cmd:"npm",args:e}))})})},repair(e){const n=r.join(e,"package.json");return new Promise((e,r)=>{t(n).then(t=>{if(t)try{const t=s.readFileSync(n),i=JSON.parse(t.toString());i.scripts=i.scripts||{},i.devDependencies=i.devDependencies||{},i.scripts=Object.assign({},i.scripts,{start:"ice dev",build:"ice build"});const c=i.ice;c&&(c.projectName&&(i.title=c.projectName),i.buildConfig={theme:c.themePackage,entry:c.entry},delete i.ice),i.devDependencies=Object.assign({},i.devDependencies,{"ice-scripts":"latest"}),s.writeFileSync(n,JSON.stringify(i,null,2)),e()}catch(e){r(e)}else r()})})}};module.exports=o;